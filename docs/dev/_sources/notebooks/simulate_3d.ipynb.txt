{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "<div class=\"alert alert-info\">\n",
    "\n",
    "**This is a fixed-text formatted version of a Jupyter notebook**\n",
    "\n",
    "- Try online [![Binder](https://mybinder.org/badge.svg)](https://mybinder.org/v2/gh/gammapy/gammapy-webpage/master?urlpath=lab/tree/simulate_3d.ipynb)\n",
    "- You can contribute with your own notebooks in this\n",
    "[GitHub repository](https://github.com/gammapy/gammapy/tree/master/tutorials).\n",
    "- **Source files:**\n",
    "[simulate_3d.ipynb](../_static/notebooks/simulate_3d.ipynb) |\n",
    "[simulate_3d.py](../_static/notebooks/simulate_3d.py)\n",
    "</div>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 3D simulation and fitting\n",
    "\n",
    "## Prerequisites\n",
    "\n",
    "- Knowledge of 3D extraction and datasets used in gammapy, see for instance the [first analysis tutorial](analysis_1.ipynb)\n",
    "\n",
    "## Context\n",
    "\n",
    "To simulate a specific observation, it is not always necessary to simulate the full photon list. For many uses cases, simulating directly a reduced binned dataset is enough: the IRFs reduced in the correct geometry are combined with a source model to predict an actual number of counts per bin. The latter is then used to simulate a reduced dataset using Poisson probability distribution.\n",
    "\n",
    "This can be done to check the feasibility of a measurement (performance / sensitivity study), to test whether fitted parameters really provide a good fit to the data etc.\n",
    "\n",
    "Here we will see how to perform a 3D simulation of a CTA observation, assuming both the spectral and spatial morphology of an observed source.\n",
    "\n",
    "**Objective: simulate a 3D observation of a source with CTA using the CTA 1DC response and fit it with the assumed source model.**\n",
    "\n",
    "## Proposed approach:\n",
    "\n",
    "Here we can't use the regular observation objects that are connected to a `DataStore`. Instead we will create a fake `~gammapy.data.Observation` that contain some pointing information and the CTA 1DC IRFs (that are loaded with `~gammapy.irf.load_cta_irfs`).\n",
    "\n",
    "Then we will create a `~gammapy.cube.MapDataset` geometry and create it with the `~gammapy.cube.MapDatasetMaker`.\n",
    "\n",
    "Then we will be able to define a model consisting of  a `~gammapy.modeling.models.PowerLawSpectralModel` and a `~gammapy.modeling.models.GaussianSpatialModel`. We will assign it to the dataset and fake the count data.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Imports and versions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import astropy.units as u\n",
    "from astropy.coordinates import SkyCoord\n",
    "from gammapy.irf import load_cta_irfs\n",
    "from gammapy.maps import WcsGeom, MapAxis\n",
    "from gammapy.modeling.models import (\n",
    "    PowerLawSpectralModel,\n",
    "    GaussianSpatialModel,\n",
    "    SkyModel,\n",
    ")\n",
    "from gammapy.makers import MapDatasetMaker, SafeMaskMaker\n",
    "from gammapy.modeling import Fit\n",
    "from gammapy.data import Observation\n",
    "from gammapy.datasets import MapDataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\r\n",
      "Gammapy package:\r\n",
      "\r\n",
      "\tversion                : 0.17.dev179+gbb40fddc5 \r\n",
      "\tpath                   : /Users/adonath/github/adonath/gammapy/gammapy \r\n",
      "\r\n"
     ]
    }
   ],
   "source": [
    "!gammapy info --no-envvar --no-dependencies --no-system"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Simulation"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We will simulate using the CTA-1DC IRFs shipped with gammapy. Note that for dedictaed CTA simulations, you can simply use [`Observation.from_caldb()`]() without having to externally load the IRFs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Loading IRFs\n",
    "irfs = load_cta_irfs(\n",
    "    \"$GAMMAPY_DATA/cta-1dc/caldb/data/cta/1dc/bcf/South_z20_50h/irf_file.fits\"\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define the observation parameters (typically the observation duration and the pointing position):\n",
    "livetime = 2.0 * u.hr\n",
    "pointing = SkyCoord(0, 0, unit=\"deg\", frame=\"galactic\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define map geometry for binned simulation\n",
    "energy_reco = MapAxis.from_edges(\n",
    "    np.logspace(-1.0, 1.0, 10), unit=\"TeV\", name=\"energy\", interp=\"log\"\n",
    ")\n",
    "geom = WcsGeom.create(\n",
    "    skydir=(0, 0),\n",
    "    binsz=0.02,\n",
    "    width=(6, 6),\n",
    "    frame=\"galactic\",\n",
    "    axes=[energy_reco],\n",
    ")\n",
    "# It is usually useful to have a separate binning for the true energy axis\n",
    "energy_true = MapAxis.from_edges(\n",
    "    np.logspace(-1.5, 1.5, 30), unit=\"TeV\", name=\"energy\", interp=\"log\"\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "SkyModel\n",
      "\n",
      "  Name                      : model-simu\n",
      "  Datasets names            : None\n",
      "  Spectral model type       : PowerLawSpectralModel\n",
      "  Spatial  model type       : GaussianSpatialModel\n",
      "  Temporal model type       : None\n",
      "  Parameters:\n",
      "    lon_0                   :   0.200  deg         \n",
      "    lat_0                   :   0.100  deg         \n",
      "    sigma                   :   0.300  deg         \n",
      "    e            (frozen)   :   0.000              \n",
      "    phi          (frozen)   :   0.000  deg         \n",
      "    index                   :   3.000              \n",
      "    amplitude               :   1.00e-11  1 / (cm2 s TeV)\n",
      "    reference    (frozen)   :   1.000  TeV         \n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Define sky model to used simulate the data.\n",
    "# Here we use a Gaussian spatial model and a Power Law spectral model.\n",
    "spatial_model = GaussianSpatialModel(\n",
    "    lon_0=\"0.2 deg\", lat_0=\"0.1 deg\", sigma=\"0.3 deg\", frame=\"galactic\"\n",
    ")\n",
    "spectral_model = PowerLawSpectralModel(\n",
    "    index=3, amplitude=\"1e-11 cm-2 s-1 TeV-1\", reference=\"1 TeV\"\n",
    ")\n",
    "model_simu = SkyModel(\n",
    "    spatial_model=spatial_model,\n",
    "    spectral_model=spectral_model,\n",
    "    name=\"model-simu\",\n",
    ")\n",
    "print(model_simu)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, comes the main part of dataset simulation. We create an in-memory observation and an empty dataset. We then predict the number of counts for the given model, and Poission fluctuate it using `fake()` to make a simulated counts maps. Keep in mind that it is important to specify the `selection` of the maps that you want to produce "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Observation\n",
      "\n",
      "\tobs id            : 0 \n",
      " \ttstart            : 51544.00\n",
      "\ttstop             : 51544.08\n",
      "\tduration          : 7200.00 s\n",
      "\tpointing (icrs)   : 266.4 deg, -28.9 deg\n",
      "\n",
      "\tdeadtime fraction : 0.0%\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING: AstropyDeprecationWarning: The truth value of a Quantity is ambiguous. In the future this will raise a ValueError. [astropy.units.quantity]\n"
     ]
    }
   ],
   "source": [
    "# Create an in-memory observation\n",
    "obs = Observation.create(pointing=pointing, livetime=livetime, irfs=irfs)\n",
    "print(obs)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MapDataset\n",
      "----------\n",
      "\n",
      "  Name                            : dataset-simu \n",
      "\n",
      "  Total counts                    : nan \n",
      "  Total predicted counts          : 161422.07\n",
      "  Total background counts         : 161422.07\n",
      "\n",
      "  Exposure min                    : 6.41e+07 m2 s\n",
      "  Exposure max                    : 2.53e+10 m2 s\n",
      "\n",
      "  Number of total bins            : 0 \n",
      "  Number of fit bins              : 804492 \n",
      "\n",
      "  Fit statistic type              : cash\n",
      "  Fit statistic value (-2 log(L)) : nan\n",
      "\n",
      "  Number of models                : 1 \n",
      "  Number of parameters            : 3\n",
      "  Number of free parameters       : 1\n",
      "\n",
      "  Component 0: BackgroundModel\n",
      "  \n",
      "    Name                      : dataset-simu-bkg\n",
      "    Datasets names            : ['dataset-simu']\n",
      "    Parameters:\n",
      "      norm                    :   1.000              \n",
      "      tilt         (frozen)   :   0.000              \n",
      "      reference    (frozen)   :   1.000  TeV         \n",
      "  \n",
      "  \n"
     ]
    }
   ],
   "source": [
    "# Make the MapDataset\n",
    "empty = MapDataset.create(geom, name=\"dataset-simu\")\n",
    "maker = MapDatasetMaker(selection=[\"exposure\", \"background\", \"psf\", \"edisp\"])\n",
    "maker_safe_mask = SafeMaskMaker(methods=[\"offset-max\"], offset_max=4.0 * u.deg)\n",
    "dataset = maker.run(empty, obs)\n",
    "dataset = maker_safe_mask.run(dataset, obs)\n",
    "print(dataset)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MapDataset\n",
      "----------\n",
      "\n",
      "  Name                            : dataset-simu \n",
      "\n",
      "  Total counts                    : 169781 \n",
      "  Total predicted counts          : 169799.36\n",
      "  Total background counts         : 161422.07\n",
      "\n",
      "  Exposure min                    : 6.41e+07 m2 s\n",
      "  Exposure max                    : 2.53e+10 m2 s\n",
      "\n",
      "  Number of total bins            : 810000 \n",
      "  Number of fit bins              : 804492 \n",
      "\n",
      "  Fit statistic type              : cash\n",
      "  Fit statistic value (-2 log(L)) : 564359.26\n",
      "\n",
      "  Number of models                : 2 \n",
      "  Number of parameters            : 11\n",
      "  Number of free parameters       : 6\n",
      "\n",
      "  Component 0: BackgroundModel\n",
      "  \n",
      "    Name                      : dataset-simu-bkg\n",
      "    Datasets names            : ['dataset-simu']\n",
      "    Parameters:\n",
      "      norm                    :   1.000              \n",
      "      tilt         (frozen)   :   0.000              \n",
      "      reference    (frozen)   :   1.000  TeV         \n",
      "  \n",
      "  Component 1: SkyModel\n",
      "  \n",
      "    Name                      : model-simu\n",
      "    Datasets names            : None\n",
      "    Spectral model type       : PowerLawSpectralModel\n",
      "    Spatial  model type       : GaussianSpatialModel\n",
      "    Temporal model type       : None\n",
      "    Parameters:\n",
      "      lon_0                   :   0.200  deg         \n",
      "      lat_0                   :   0.100  deg         \n",
      "      sigma                   :   0.300  deg         \n",
      "      e            (frozen)   :   0.000              \n",
      "      phi          (frozen)   :   0.000  deg         \n",
      "      index                   :   3.000              \n",
      "      amplitude               :   1.00e-11  1 / (cm2 s TeV)\n",
      "      reference    (frozen)   :   1.000  TeV         \n",
      "  \n",
      "  \n"
     ]
    }
   ],
   "source": [
    "# Add the model on the dataset and Poission fluctuate\n",
    "dataset.models.append(model_simu)\n",
    "dataset.fake()\n",
    "# Do a print on the dataset - there is now a counts maps\n",
    "print(dataset)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now use this dataset as you would in all standard analysis. You can plot the maps, or proceed with your custom analysis. \n",
    "In the next section, we show the standard 3D fitting as in [analysis_3d](analysis_3d.ipynb)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# To plot, eg, counts:\n",
    "dataset.counts.smooth(0.05 * u.deg).plot_interactive(\n",
    "    add_cbar=True, stretch=\"linear\"\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Fit\n",
    "\n",
    "In this section, we do a usual 3D fit with the same model used to simulated the data and see the stability of the simulations. Often, it is useful to simulate many such datasets and look at the distribution of the reconstructed parameters."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Make a copy of the dataset\n",
    "dataset_fit = dataset.copy(name=\"dataset-fit\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Models\n",
      "\n",
      "Component 0: BackgroundModel\n",
      "\n",
      "  Name                      : dataset-simu-bkg\n",
      "  Datasets names            : ['dataset-simu']\n",
      "  Parameters:\n",
      "    norm                    :   1.000              \n",
      "    tilt         (frozen)   :   0.000              \n",
      "    reference    (frozen)   :   1.000  TeV         \n",
      "\n",
      "Component 1: SkyModel\n",
      "\n",
      "  Name                      : model-simu\n",
      "  Datasets names            : None\n",
      "  Spectral model type       : PowerLawSpectralModel\n",
      "  Spatial  model type       : GaussianSpatialModel\n",
      "  Temporal model type       : None\n",
      "  Parameters:\n",
      "    lon_0                   :   0.200  deg         \n",
      "    lat_0                   :   0.100  deg         \n",
      "    sigma                   :   0.300  deg         \n",
      "    e            (frozen)   :   0.000              \n",
      "    phi          (frozen)   :   0.000  deg         \n",
      "    index                   :   3.000              \n",
      "    amplitude               :   1.00e-11  1 / (cm2 s TeV)\n",
      "    reference    (frozen)   :   1.000  TeV         \n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(dataset_fit.models)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "dataset_fit.models[\"dataset-simu-bkg\"].datasets_names = [\"dataset-fit\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Models\n",
      "\n",
      "Component 0: SkyModel\n",
      "\n",
      "  Name                      : model-fit\n",
      "  Datasets names            : None\n",
      "  Spectral model type       : PowerLawSpectralModel\n",
      "  Spatial  model type       : GaussianSpatialModel\n",
      "  Temporal model type       : None\n",
      "  Parameters:\n",
      "    lon_0                   :   0.100  deg         \n",
      "    lat_0                   :   0.100  deg         \n",
      "    sigma                   :   0.500  deg         \n",
      "    e            (frozen)   :   0.000              \n",
      "    phi          (frozen)   :   0.000  deg         \n",
      "    index                   :   2.000              \n",
      "    amplitude               :   1.00e-11  1 / (cm2 s TeV)\n",
      "    reference    (frozen)   :   1.000  TeV         \n",
      "\n",
      "Component 1: BackgroundModel\n",
      "\n",
      "  Name                      : dataset-simu-bkg\n",
      "  Datasets names            : ['dataset-fit']\n",
      "  Parameters:\n",
      "    norm                    :   1.000              \n",
      "    tilt         (frozen)   :   0.000              \n",
      "    reference    (frozen)   :   1.000  TeV         \n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Define sky model to fit the data\n",
    "spatial_model1 = GaussianSpatialModel(\n",
    "    lon_0=\"0.1 deg\", lat_0=\"0.1 deg\", sigma=\"0.5 deg\", frame=\"galactic\"\n",
    ")\n",
    "spectral_model1 = PowerLawSpectralModel(\n",
    "    index=2, amplitude=\"1e-11 cm-2 s-1 TeV-1\", reference=\"1 TeV\"\n",
    ")\n",
    "model_fit = SkyModel(\n",
    "    spatial_model=spatial_model1,\n",
    "    spectral_model=spectral_model1,\n",
    "    name=\"model-fit\",\n",
    ")\n",
    "\n",
    "dataset_fit.models = [model_fit, dataset_fit.models[0]]\n",
    "print(dataset_fit.models)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "BackgroundModel\n",
      "\n",
      "  Name                      : dataset-simu-bkg\n",
      "  Datasets names            : ['dataset-fit']\n",
      "  Parameters:\n",
      "    norm         (frozen)   :   1.000              \n",
      "    tilt         (frozen)   :   0.000              \n",
      "    reference    (frozen)   :   1.000  TeV         \n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# We do not want to fit the background in this case, so we will freeze the parameters\n",
    "background_model = dataset_fit.background_model\n",
    "background_model.parameters[\"norm\"].value = 1.0\n",
    "background_model.parameters[\"norm\"].frozen = True\n",
    "background_model.parameters[\"tilt\"].frozen = True\n",
    "\n",
    "print(background_model)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MapDataset\n",
      "----------\n",
      "\n",
      "  Name                            : dataset-fit \n",
      "\n",
      "  Total counts                    : 169781 \n",
      "  Total predicted counts          : 164554.41\n",
      "  Total background counts         : 161422.07\n",
      "\n",
      "  Exposure min                    : 6.41e+07 m2 s\n",
      "  Exposure max                    : 2.53e+10 m2 s\n",
      "\n",
      "  Number of total bins            : 810000 \n",
      "  Number of fit bins              : 804492 \n",
      "\n",
      "  Fit statistic type              : cash\n",
      "  Fit statistic value (-2 log(L)) : 569196.12\n",
      "\n",
      "  Number of models                : 2 \n",
      "  Number of parameters            : 11\n",
      "  Number of free parameters       : 5\n",
      "\n",
      "  Component 0: SkyModel\n",
      "  \n",
      "    Name                      : model-fit\n",
      "    Datasets names            : None\n",
      "    Spectral model type       : PowerLawSpectralModel\n",
      "    Spatial  model type       : GaussianSpatialModel\n",
      "    Temporal model type       : None\n",
      "    Parameters:\n",
      "      lon_0                   :   0.100  deg         \n",
      "      lat_0                   :   0.100  deg         \n",
      "      sigma                   :   0.500  deg         \n",
      "      e            (frozen)   :   0.000              \n",
      "      phi          (frozen)   :   0.000  deg         \n",
      "      index                   :   2.000              \n",
      "      amplitude               :   1.00e-11  1 / (cm2 s TeV)\n",
      "      reference    (frozen)   :   1.000  TeV         \n",
      "  \n",
      "  Component 1: BackgroundModel\n",
      "  \n",
      "    Name                      : dataset-simu-bkg\n",
      "    Datasets names            : ['dataset-fit']\n",
      "    Parameters:\n",
      "      norm         (frozen)   :   1.000              \n",
      "      tilt         (frozen)   :   0.000              \n",
      "      reference    (frozen)   :   1.000  TeV         \n",
      "  \n",
      "  \n"
     ]
    }
   ],
   "source": [
    "print(dataset_fit)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------------------------------------------------------------------\n",
      "| FCN = 5.644E+05               |     Ncalls=226 (226 total)     |\n",
      "| EDM = 7.1E-06 (Goal: 1E-05)   |            up = 1.0            |\n",
      "------------------------------------------------------------------\n",
      "|  Valid Min.   | Valid Param.  | Above EDM | Reached call limit |\n",
      "------------------------------------------------------------------\n",
      "|     True      |     True      |   False   |       False        |\n",
      "------------------------------------------------------------------\n",
      "| Hesse failed  |   Has cov.    | Accurate  | Pos. def. | Forced |\n",
      "------------------------------------------------------------------\n",
      "|     False     |     True      |   True    |   True    | False  |\n",
      "------------------------------------------------------------------\n",
      "CPU times: user 19.2 s, sys: 1.61 s, total: 20.8 s\n",
      "Wall time: 21.3 s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "fit = Fit([dataset_fit])\n",
    "result = fit.run(optimize_opts={\"print_level\": 1})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(<matplotlib.axes._subplots.WCSAxesSubplot at 0x1c1af164e0>, None)"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 864x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "dataset_fit.plot_residuals(method=\"diff/sqrt(model)\", vmin=-0.5, vmax=0.5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Compare the injected and fitted models: "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True model: \n",
      " SkyModel\n",
      "\n",
      "  Name                      : model-simu\n",
      "  Datasets names            : None\n",
      "  Spectral model type       : PowerLawSpectralModel\n",
      "  Spatial  model type       : GaussianSpatialModel\n",
      "  Temporal model type       : None\n",
      "  Parameters:\n",
      "    lon_0                   :   0.200  deg         \n",
      "    lat_0                   :   0.100  deg         \n",
      "    sigma                   :   0.300  deg         \n",
      "    e            (frozen)   :   0.000              \n",
      "    phi          (frozen)   :   0.000  deg         \n",
      "    index                   :   3.000              \n",
      "    amplitude               :   1.00e-11  1 / (cm2 s TeV)\n",
      "    reference    (frozen)   :   1.000  TeV         \n",
      "\n",
      " \n",
      "\n",
      " Fitted model: \n",
      " SkyModel\n",
      "\n",
      "  Name                      : model-fit\n",
      "  Datasets names            : None\n",
      "  Spectral model type       : PowerLawSpectralModel\n",
      "  Spatial  model type       : GaussianSpatialModel\n",
      "  Temporal model type       : None\n",
      "  Parameters:\n",
      "    lon_0                   :   0.196  deg         \n",
      "    lat_0                   :   0.099  deg         \n",
      "    sigma                   :   0.301  deg         \n",
      "    e            (frozen)   :   0.000              \n",
      "    phi          (frozen)   :   0.000  deg         \n",
      "    index                   :   2.989              \n",
      "    amplitude               :   1.02e-11  1 / (cm2 s TeV)\n",
      "    reference    (frozen)   :   1.000  TeV         \n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(\"True model: \\n\", model_simu, \"\\n\\n Fitted model: \\n\", model_fit)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Get the errors on the fitted parameters from the parameter table"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<i>Table length=11</i>\n",
       "<table id=\"table120720149024\" class=\"table-striped table-bordered table-condensed\">\n",
       "<thead><tr><th>name</th><th>value</th><th>error</th><th>unit</th><th>min</th><th>max</th><th>frozen</th></tr></thead>\n",
       "<thead><tr><th>str9</th><th>float64</th><th>float64</th><th>str14</th><th>float64</th><th>float64</th><th>bool</th></tr></thead>\n",
       "<tr><td>lon_0</td><td>1.964e-01</td><td>5.942e-03</td><td>deg</td><td>nan</td><td>nan</td><td>False</td></tr>\n",
       "<tr><td>lat_0</td><td>9.911e-02</td><td>6.048e-03</td><td>deg</td><td>-9.000e+01</td><td>9.000e+01</td><td>False</td></tr>\n",
       "<tr><td>sigma</td><td>3.005e-01</td><td>4.168e-03</td><td>deg</td><td>0.000e+00</td><td>nan</td><td>False</td></tr>\n",
       "<tr><td>e</td><td>0.000e+00</td><td>0.000e+00</td><td></td><td>0.000e+00</td><td>1.000e+00</td><td>True</td></tr>\n",
       "<tr><td>phi</td><td>0.000e+00</td><td>0.000e+00</td><td>deg</td><td>nan</td><td>nan</td><td>True</td></tr>\n",
       "<tr><td>index</td><td>2.989e+00</td><td>1.981e-02</td><td></td><td>nan</td><td>nan</td><td>False</td></tr>\n",
       "<tr><td>amplitude</td><td>1.022e-11</td><td>3.311e-13</td><td>cm-2 s-1 TeV-1</td><td>nan</td><td>nan</td><td>False</td></tr>\n",
       "<tr><td>reference</td><td>1.000e+00</td><td>0.000e+00</td><td>TeV</td><td>nan</td><td>nan</td><td>True</td></tr>\n",
       "<tr><td>norm</td><td>1.000e+00</td><td>0.000e+00</td><td></td><td>0.000e+00</td><td>nan</td><td>True</td></tr>\n",
       "<tr><td>tilt</td><td>0.000e+00</td><td>0.000e+00</td><td></td><td>nan</td><td>nan</td><td>True</td></tr>\n",
       "<tr><td>reference</td><td>1.000e+00</td><td>0.000e+00</td><td>TeV</td><td>nan</td><td>nan</td><td>True</td></tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<Table length=11>\n",
       "   name     value     error        unit         min        max    frozen\n",
       "   str9    float64   float64      str14       float64    float64   bool \n",
       "--------- --------- --------- -------------- ---------- --------- ------\n",
       "    lon_0 1.964e-01 5.942e-03            deg        nan       nan  False\n",
       "    lat_0 9.911e-02 6.048e-03            deg -9.000e+01 9.000e+01  False\n",
       "    sigma 3.005e-01 4.168e-03            deg  0.000e+00       nan  False\n",
       "        e 0.000e+00 0.000e+00                 0.000e+00 1.000e+00   True\n",
       "      phi 0.000e+00 0.000e+00            deg        nan       nan   True\n",
       "    index 2.989e+00 1.981e-02                       nan       nan  False\n",
       "amplitude 1.022e-11 3.311e-13 cm-2 s-1 TeV-1        nan       nan  False\n",
       "reference 1.000e+00 0.000e+00            TeV        nan       nan   True\n",
       "     norm 1.000e+00 0.000e+00                 0.000e+00       nan   True\n",
       "     tilt 0.000e+00 0.000e+00                       nan       nan   True\n",
       "reference 1.000e+00 0.000e+00            TeV        nan       nan   True"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "result.parameters.to_table()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.0"
  },
  "nbsphinx": {
   "orphan": true
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {
     "016c02d31c1f4c02b3a8837823a6286b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "RadioButtonsModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "RadioButtonsModel",
       "_options_labels": [
        "linear",
        "sqrt",
        "log"
       ],
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "RadioButtonsView",
       "description": "Select stretch:",
       "description_tooltip": null,
       "disabled": false,
       "index": 0,
       "layout": "IPY_MODEL_c20c80b18e594122b9ab538b547e9664",
       "style": "IPY_MODEL_eccced3511b54d19bf3cf1cb3c902c6c"
      }
     },
     "0b59958541d44aa59bad64fd7efea8d7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "VBoxModel",
      "state": {
       "_dom_classes": [
        "widget-interact"
       ],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "VBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "VBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_577981d9c1e14dfd918789923b39db88",
        "IPY_MODEL_016c02d31c1f4c02b3a8837823a6286b",
        "IPY_MODEL_9fe59c3c967d4585b22f83c82d1f818b"
       ],
       "layout": "IPY_MODEL_56acc6ab18a142d29b8551beb8672c17"
      }
     },
     "12347e18ac954d7ca4d6e1393f35becf": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "26d448bb15f74d69bd3db236977e0668": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": "initial"
      }
     },
     "56acc6ab18a142d29b8551beb8672c17": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "577981d9c1e14dfd918789923b39db88": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "SelectionSliderModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "SelectionSliderModel",
       "_options_labels": [
        "1.00e-01 TeV - 1.67e-01 TeV TeV",
        "1.67e-01 TeV - 2.78e-01 TeV TeV",
        "2.78e-01 TeV - 4.64e-01 TeV TeV",
        "4.64e-01 TeV - 7.74e-01 TeV TeV",
        "7.74e-01 TeV - 1.29e+00 TeV TeV",
        "1.29e+00 TeV - 2.15e+00 TeV TeV",
        "2.15e+00 TeV - 3.59e+00 TeV TeV",
        "3.59e+00 TeV - 5.99e+00 TeV TeV",
        "5.99e+00 TeV - 1.00e+01 TeV TeV"
       ],
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "SelectionSliderView",
       "continuous_update": false,
       "description": "Select energy:",
       "description_tooltip": null,
       "disabled": false,
       "index": 0,
       "layout": "IPY_MODEL_8d622f3afa05472f814438d05cb71245",
       "orientation": "horizontal",
       "readout": true,
       "style": "IPY_MODEL_26d448bb15f74d69bd3db236977e0668"
      }
     },
     "8d622f3afa05472f814438d05cb71245": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "50%"
      }
     },
     "9fe59c3c967d4585b22f83c82d1f818b": {
      "model_module": "@jupyter-widgets/output",
      "model_module_version": "1.0.0",
      "model_name": "OutputModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/output",
       "_model_module_version": "1.0.0",
       "_model_name": "OutputModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/output",
       "_view_module_version": "1.0.0",
       "_view_name": "OutputView",
       "layout": "IPY_MODEL_12347e18ac954d7ca4d6e1393f35becf",
       "msg_id": "",
       "outputs": []
      }
     },
     "c20c80b18e594122b9ab538b547e9664": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "eccced3511b54d19bf3cf1cb3c902c6c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": "initial"
      }
     }
    },
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
