{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "<div class=\"alert alert-info\">\n",
    "\n",
    "**This is a fixed-text formatted version of a Jupyter notebook**\n",
    "\n",
    "- Try online [![Binder](https://static.mybinder.org/badge.svg)](https://mybinder.org/v2/gh/gammapy/gammapy-webpage/master?urlpath=lab/tree/fermi_lat.ipynb)\n",
    "- You can contribute with your own notebooks in this\n",
    "[GitHub repository](https://github.com/gammapy/gammapy/tree/master/docs/tutorials).\n",
    "- **Source files:**\n",
    "[fermi_lat.ipynb](../_static/notebooks/fermi_lat.ipynb) |\n",
    "[fermi_lat.py](../_static/notebooks/fermi_lat.py)\n",
    "</div>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Fermi-LAT data with Gammapy\n",
    "\n",
    "## Introduction\n",
    "\n",
    "This tutorial will show you how to work with Fermi-LAT data with Gammapy. As an example, we will look at the Galactic center region using the high-energy dataset that was used for the 3FHL catalog, in the energy range 10 GeV to 2 TeV.\n",
    "\n",
    "We note that support for Fermi-LAT data analysis in Gammapy is very limited. For most tasks, we recommend you use \n",
    "[Fermipy](http://fermipy.readthedocs.io/), which is based on the [Fermi Science Tools](https://fermi.gsfc.nasa.gov/ssc/data/analysis/software/) (Fermi ST).\n",
    "\n",
    "Using Gammapy with Fermi-LAT data could be an option for you if you want to do an analysis that is not easily possible with Fermipy and the Fermi Science Tools. For example a joint likelihood fit of Fermi-LAT data with data e.g. from H.E.S.S., MAGIC, VERITAS or some other instrument, or analysis of Fermi-LAT data with a complex spatial or spectral model that is not available in Fermipy or the Fermi ST.\n",
    "\n",
    "Besides Gammapy, you might want to look at are [Sherpa](http://cxc.harvard.edu/sherpa/) or [3ML](https://threeml.readthedocs.io/). Or just using Python to roll your own analyis using several existing analysis packages. E.g. it it possible to use Fermipy and the Fermi ST to evaluate the likelihood on Fermi-LAT data, and Gammapy to evaluate it e.g. for IACT data, and to do a joint likelihood fit using e.g. [iminuit](http://iminuit.readthedocs.io/) or [emcee](http://dfm.io/emcee).\n",
    "\n",
    "To use Fermi-LAT data with Gammapy, you first have to use the Fermi ST to prepare an event list (using ``gtselect`` and ``gtmktime``, exposure cube (using ``gtexpcube2`` and PSF (using ``gtpsf``). You can then use `~gammapy.data.EventList`, `~gammapy.maps` and the `~gammapy.irf.EnergyDependentTablePSF` to read the Fermi-LAT maps and PSF, i.e. support for these high-level analysis products from the Fermi ST is built in. To do a 3D map analyis, you can use Fit for Fermi-LAT data in the same way that it's use for IACT data. This is illustrated in this notebook. A 1D region-based spectral analysis is also possible, this will be illustrated in a future tutorial.\n",
    "\n",
    "## Setup\n",
    "\n",
    "**IMPORTANT**: For this notebook you have to get the prepared ``3fhl`` dataset provided in your $GAMMAPY_DATA.\n",
    "\n",
    "Note that the ``3fhl`` dataset is high-energy only, ranging from 10 GeV to 2 TeV."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:38.174300Z",
     "iopub.status.busy": "2020-10-16T10:06:38.173633Z",
     "iopub.status.idle": "2020-10-16T10:06:38.333263Z",
     "shell.execute_reply": "2020-10-16T10:06:38.333754Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "fermi_3fhl_events_selected.fits.gz\r\n",
      "fermi_3fhl_exposure_cube_hpx.fits.gz\r\n",
      "fermi_3fhl_psf_gc.fits.gz\r\n",
      "gll_iem_v06_cutout.fits\r\n",
      "iso_P8R2_SOURCE_V6_v06.txt\r\n"
     ]
    }
   ],
   "source": [
    "# Check that you have the prepared Fermi-LAT dataset\n",
    "# We will use diffuse models from here\n",
    "!ls -1 $GAMMAPY_DATA/fermi_3fhl"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:38.339794Z",
     "iopub.status.busy": "2020-10-16T10:06:38.338810Z",
     "iopub.status.idle": "2020-10-16T10:06:38.663975Z",
     "shell.execute_reply": "2020-10-16T10:06:38.662470Z"
    }
   },
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:38.670624Z",
     "iopub.status.busy": "2020-10-16T10:06:38.669785Z",
     "iopub.status.idle": "2020-10-16T10:06:39.868076Z",
     "shell.execute_reply": "2020-10-16T10:06:39.867059Z"
    }
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "from astropy import units as u\n",
    "from astropy.coordinates import SkyCoord\n",
    "from gammapy.data import EventList\n",
    "from gammapy.datasets import MapDataset\n",
    "from gammapy.datasets.map import MapEvaluator\n",
    "from gammapy.irf import EnergyDependentTablePSF, PSFMap, EDispMap\n",
    "from gammapy.maps import Map, MapAxis, WcsNDMap, WcsGeom\n",
    "from gammapy.modeling.models import (\n",
    "    PowerLawSpectralModel,\n",
    "    PointSpatialModel,\n",
    "    SkyModel,\n",
    "    TemplateSpatialModel,\n",
    "    PowerLawNormSpectralModel,\n",
    "    Models,\n",
    "    create_fermi_isotropic_diffuse_model,\n",
    "    BackgroundModel,\n",
    ")\n",
    "from gammapy.modeling import Fit"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Events\n",
    "\n",
    "To load up the Fermi-LAT event list, use the `~gammapy.data.EventList` class:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:39.872627Z",
     "iopub.status.busy": "2020-10-16T10:06:39.872001Z",
     "iopub.status.idle": "2020-10-16T10:06:41.567004Z",
     "shell.execute_reply": "2020-10-16T10:06:41.566465Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "EventList\n",
      "---------\n",
      "\n",
      "  Instrument       : LAT\n",
      "  Telescope        : GLAST\n",
      "  Obs. ID          : \n",
      "\n",
      "  Number of events : 697317\n",
      "  Event rate       : 0.003 1 / s\n",
      "\n",
      "  Time start       : 54682.65603222222\n",
      "  Time stop        : 57236.96833546296\n",
      "\n",
      "  Min. energy      : 1.00e+04 MeV\n",
      "  Max. energy      : 2.00e+06 MeV\n",
      "  Median energy    : 1.59e+04 MeV\n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "events = EventList.read(\n",
    "    \"$GAMMAPY_DATA/fermi_3fhl/fermi_3fhl_events_selected.fits.gz\"\n",
    ")\n",
    "print(events)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The event data is stored in a [astropy.table.Table](http://docs.astropy.org/en/stable/api/astropy.table.Table.html) object. In case of the Fermi-LAT event list this contains all the additional information on positon, zenith angle, earth azimuth angle, event class, event type etc."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:41.576948Z",
     "iopub.status.busy": "2020-10-16T10:06:41.574635Z",
     "iopub.status.idle": "2020-10-16T10:06:41.578812Z",
     "shell.execute_reply": "2020-10-16T10:06:41.579512Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['ENERGY',\n",
       " 'RA',\n",
       " 'DEC',\n",
       " 'L',\n",
       " 'B',\n",
       " 'THETA',\n",
       " 'PHI',\n",
       " 'ZENITH_ANGLE',\n",
       " 'EARTH_AZIMUTH_ANGLE',\n",
       " 'TIME',\n",
       " 'EVENT_ID',\n",
       " 'RUN_ID',\n",
       " 'RECON_VERSION',\n",
       " 'CALIB_VERSION',\n",
       " 'EVENT_CLASS',\n",
       " 'EVENT_TYPE',\n",
       " 'CONVERSION_TYPE',\n",
       " 'LIVETIME',\n",
       " 'DIFRSP0',\n",
       " 'DIFRSP1',\n",
       " 'DIFRSP2',\n",
       " 'DIFRSP3',\n",
       " 'DIFRSP4']"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "events.table.colnames"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:41.586921Z",
     "iopub.status.busy": "2020-10-16T10:06:41.586329Z",
     "iopub.status.idle": "2020-10-16T10:06:41.589222Z",
     "shell.execute_reply": "2020-10-16T10:06:41.589789Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<i>Table length=5</i>\n",
       "<table id=\"table139638249006528\" class=\"table-striped table-bordered table-condensed\">\n",
       "<thead><tr><th>ENERGY</th><th>RA</th><th>DEC</th></tr></thead>\n",
       "<thead><tr><th>MeV</th><th>deg</th><th>deg</th></tr></thead>\n",
       "<thead><tr><th>float32</th><th>float32</th><th>float32</th></tr></thead>\n",
       "<tr><td>12856.5205</td><td>139.64438</td><td>-9.93702</td></tr>\n",
       "<tr><td>14773.319</td><td>177.04454</td><td>60.55275</td></tr>\n",
       "<tr><td>23273.527</td><td>110.21325</td><td>37.002018</td></tr>\n",
       "<tr><td>41866.125</td><td>334.85287</td><td>17.577398</td></tr>\n",
       "<tr><td>42463.074</td><td>316.86676</td><td>48.152477</td></tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<Table length=5>\n",
       "  ENERGY       RA       DEC   \n",
       "   MeV        deg       deg   \n",
       " float32    float32   float32 \n",
       "---------- --------- ---------\n",
       "12856.5205 139.64438  -9.93702\n",
       " 14773.319 177.04454  60.55275\n",
       " 23273.527 110.21325 37.002018\n",
       " 41866.125 334.85287 17.577398\n",
       " 42463.074 316.86676 48.152477"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "events.table[:5][[\"ENERGY\", \"RA\", \"DEC\"]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:41.593564Z",
     "iopub.status.busy": "2020-10-16T10:06:41.592995Z",
     "iopub.status.idle": "2020-10-16T10:06:42.041969Z",
     "shell.execute_reply": "2020-10-16T10:06:42.041449Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2008-08-04 15:49:26.782\n",
      "2015-07-30 11:00:41.226\n"
     ]
    }
   ],
   "source": [
    "print(events.time[0].iso)\n",
    "print(events.time[-1].iso)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:42.046457Z",
     "iopub.status.busy": "2020-10-16T10:06:42.045871Z",
     "iopub.status.idle": "2020-10-16T10:06:42.142549Z",
     "shell.execute_reply": "2020-10-16T10:06:42.142028Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "mean = 28905.451171875 MeV\n",
      "std = 61051.7421875 MeV\n",
      "min = 10000.03125 MeV\n",
      "max = 1998482.75 MeV\n",
      "n_bad = 0\n",
      "length = 697317\n"
     ]
    }
   ],
   "source": [
    "energy = events.energy\n",
    "energy.info(\"stats\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As a short analysis example we will count the number of events above a certain minimum energy: "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:42.147278Z",
     "iopub.status.busy": "2020-10-16T10:06:42.146688Z",
     "iopub.status.idle": "2020-10-16T10:06:42.181887Z",
     "shell.execute_reply": "2020-10-16T10:06:42.182328Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Events above   10 GeV: 697317\n",
      "Events above  100 GeV: 23628\n",
      "Events above 1000 GeV:   544\n"
     ]
    }
   ],
   "source": [
    "for e_min in [10, 100, 1000] * u.GeV:\n",
    "    n = (events.energy > e_min).sum()\n",
    "    print(f\"Events above {e_min:4.0f}: {n:5.0f}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Counts\n",
    "\n",
    "Let us start to prepare things for an 3D map analysis of the Galactic center region with Gammapy. The first thing we do is to define the map geometry. We chose a TAN projection centered on position ``(glon, glat) = (0, 0)`` with pixel size 0.1 deg, and four energy bins."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:42.192411Z",
     "iopub.status.busy": "2020-10-16T10:06:42.191762Z",
     "iopub.status.idle": "2020-10-16T10:06:42.883507Z",
     "shell.execute_reply": "2020-10-16T10:06:42.882791Z"
    }
   },
   "outputs": [],
   "source": [
    "gc_pos = SkyCoord(0, 0, unit=\"deg\", frame=\"galactic\")\n",
    "energy_axis = MapAxis.from_edges(\n",
    "    [1e4, 3e4, 1e5, 3e5, 2e6], name=\"energy\", unit=\"MeV\", interp=\"log\"\n",
    ")\n",
    "counts = Map.create(\n",
    "    skydir=gc_pos,\n",
    "    npix=(100, 80),\n",
    "    proj=\"TAN\",\n",
    "    frame=\"galactic\",\n",
    "    binsz=0.1,\n",
    "    axes=[energy_axis],\n",
    "    dtype=float,\n",
    ")\n",
    "# We put this call into the same Jupyter cell as the Map.create\n",
    "# because otherwise we could accidentally fill the counts\n",
    "# multiple times when executing the ``fill_by_coord`` multiple times.\n",
    "counts.fill_by_coord({\"skycoord\": events.radec, \"energy\": events.energy})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:42.889322Z",
     "iopub.status.busy": "2020-10-16T10:06:42.888736Z",
     "iopub.status.idle": "2020-10-16T10:06:42.891597Z",
     "shell.execute_reply": "2020-10-16T10:06:42.892272Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "MapAxis\n",
       "\n",
       "\tname       : energy    \n",
       "\tunit       : 'MeV'     \n",
       "\tnbins      : 4         \n",
       "\tnode type  : edges     \n",
       "\tedges min  : 1.0e+04 MeV\n",
       "\tedges max  : 2.0e+06 MeV\n",
       "\tinterp     : log       "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "counts.geom.axes[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:42.897695Z",
     "iopub.status.busy": "2020-10-16T10:06:42.896375Z",
     "iopub.status.idle": "2020-10-16T10:06:43.189242Z",
     "shell.execute_reply": "2020-10-16T10:06:43.190117Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/share/miniconda/envs/gammapy-dev/lib/python3.7/site-packages/astropy/visualization/wcsaxes/core.py:211: MatplotlibDeprecationWarning: Passing parameters norm and vmin/vmax simultaneously is deprecated since 3.3 and will become an error two minor releases later. Please pass vmin/vmax directly to the norm when creating it.\n",
      "  return super().imshow(X, *args, origin=origin, **kwargs)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(<Figure size 432x288 with 1 Axes>,\n",
       " <WCSAxesSubplot:xlabel='Galactic Longitude', ylabel='Galactic Latitude'>,\n",
       " None)"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "counts.sum_over_axes().smooth(2).plot(stretch=\"sqrt\", vmax=30);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Exposure\n",
    "\n",
    "The Fermi-LAT datatset contains the energy-dependent exposure for the whole sky as a HEALPix map computed with ``gtexpcube2``. This format is supported by `~gammapy.maps` directly.\n",
    "\n",
    "Interpolating the exposure cube from the Fermi ST to get an exposure cube matching the spatial geometry and energy axis defined above with Gammapy is easy. The only point to watch out for is how exactly you want the energy axis and binning handled.\n",
    "\n",
    "Below we just use the default behaviour, which is linear interpolation in energy on the original exposure cube. Probably log interpolation would be better, but it doesn't matter much here, because the energy binning is fine. Finally, we just copy the counts map geometry, which contains an energy axis with `node_type=\"edges\"`. This is non-ideal for exposure cubes, but again, acceptable because exposure doesn't vary much from bin to bin, so the exact way interpolation occurs in later use of that exposure cube doesn't matter a lot. Of course you could define any energy axis for your exposure cube that you like."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:43.193614Z",
     "iopub.status.busy": "2020-10-16T10:06:43.192523Z",
     "iopub.status.idle": "2020-10-16T10:06:43.459761Z",
     "shell.execute_reply": "2020-10-16T10:06:43.460319Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "HpxGeom\n",
      "\n",
      "\taxes       : ['skycoord', 'energy_true']\n",
      "\tshape      : (49152, 18)\n",
      "\tndim       : 3\n",
      "\tnside      : 64\n",
      "\tnested     : False\n",
      "\tframe   : icrs\n",
      "\tprojection : HPX\n",
      "\tcenter     : 0.0 deg, 0.0 deg\n",
      "\n",
      "MapAxis\n",
      "\n",
      "\tname       : energy_true\n",
      "\tunit       : 'MeV'     \n",
      "\tnbins      : 18        \n",
      "\tnode type  : center    \n",
      "\tcenter min : 1.0e+04 MeV\n",
      "\tcenter max : 2.0e+06 MeV\n",
      "\tinterp     : log       \n",
      "\n"
     ]
    }
   ],
   "source": [
    "exposure_hpx = Map.read(\n",
    "    \"$GAMMAPY_DATA/fermi_3fhl/fermi_3fhl_exposure_cube_hpx.fits.gz\"\n",
    ")\n",
    "print(exposure_hpx.geom)\n",
    "print(exposure_hpx.geom.axes[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:43.466781Z",
     "iopub.status.busy": "2020-10-16T10:06:43.466202Z",
     "iopub.status.idle": "2020-10-16T10:06:44.279429Z",
     "shell.execute_reply": "2020-10-16T10:06:44.278531Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(<Figure size 432x288 with 1 Axes>,\n",
       " <WCSAxesSubplot:xlabel='Right Ascension', ylabel='Declination'>,\n",
       " None)"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "exposure_hpx.plot();"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:44.286213Z",
     "iopub.status.busy": "2020-10-16T10:06:44.285339Z",
     "iopub.status.idle": "2020-10-16T10:06:44.333621Z",
     "shell.execute_reply": "2020-10-16T10:06:44.332981Z"
    }
   },
   "outputs": [],
   "source": [
    "# For exposure, we choose a geometry with node_type='center',\n",
    "# whereas for counts it was node_type='edge'\n",
    "axis = MapAxis.from_nodes(\n",
    "    counts.geom.axes[0].center, name=\"energy_true\", unit=\"MeV\", interp=\"log\"\n",
    ")\n",
    "geom = WcsGeom(wcs=counts.geom.wcs, npix=counts.geom.npix, axes=[axis])\n",
    "\n",
    "exposure = exposure_hpx.interp_to_geom(geom)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:44.337939Z",
     "iopub.status.busy": "2020-10-16T10:06:44.337370Z",
     "iopub.status.idle": "2020-10-16T10:06:44.344774Z",
     "shell.execute_reply": "2020-10-16T10:06:44.344178Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WcsGeom\n",
      "\n",
      "\taxes       : ['lon', 'lat', 'energy_true']\n",
      "\tshape      : (100, 80, 4)\n",
      "\tndim       : 3\n",
      "\tframe      : galactic\n",
      "\tprojection : TAN\n",
      "\tcenter     : 0.0 deg, 0.0 deg\n",
      "\twidth      : 10.0 deg x 8.0 deg\n",
      "\n",
      "MapAxis\n",
      "\n",
      "\tname       : energy_true\n",
      "\tunit       : 'MeV'     \n",
      "\tnbins      : 4         \n",
      "\tnode type  : center    \n",
      "\tcenter min : 1.7e+04 MeV\n",
      "\tcenter max : 7.7e+05 MeV\n",
      "\tinterp     : log       \n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(exposure.geom)\n",
    "print(exposure.geom.axes[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:44.362162Z",
     "iopub.status.busy": "2020-10-16T10:06:44.356665Z",
     "iopub.status.idle": "2020-10-16T10:06:44.628991Z",
     "shell.execute_reply": "2020-10-16T10:06:44.629594Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(<Figure size 432x288 with 2 Axes>,\n",
       " <WCSAxesSubplot:xlabel='Galactic Longitude', ylabel='Galactic Latitude'>,\n",
       " <matplotlib.colorbar.Colorbar at 0x7effdbdc3a20>)"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Exposure is almost constant accross the field of view\n",
    "exposure.slice_by_idx({\"energy_true\": 0}).plot(add_cbar=True);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:44.632223Z",
     "iopub.status.busy": "2020-10-16T10:06:44.631604Z",
     "iopub.status.idle": "2020-10-16T10:06:44.638071Z",
     "shell.execute_reply": "2020-10-16T10:06:44.638643Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([3.19917466e+11, 3.27536547e+11, 3.03032026e+11])"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Exposure varies very little with energy at these high energies\n",
    "energy = [10, 100, 1000] * u.GeV\n",
    "exposure.get_by_coord({\"skycoord\": gc_pos, \"energy_true\": energy})"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Galactic diffuse background"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The Fermi-LAT collaboration provides a galactic diffuse emission model, that can be used as a background model for\n",
    "Fermi-LAT source analysis.\n",
    "\n",
    "Diffuse model maps are very large (100s of MB), so as an example here, we just load one that represents a small cutout for the Galactic center region."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:44.642021Z",
     "iopub.status.busy": "2020-10-16T10:06:44.641277Z",
     "iopub.status.idle": "2020-10-16T10:06:44.684965Z",
     "shell.execute_reply": "2020-10-16T10:06:44.684274Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WcsGeom\n",
      "\n",
      "\taxes       : ['lon', 'lat', 'energy_true']\n",
      "\tshape      : (120, 64, 30)\n",
      "\tndim       : 3\n",
      "\tframe      : galactic\n",
      "\tprojection : CAR\n",
      "\tcenter     : 0.0 deg, -0.1 deg\n",
      "\twidth      : 15.0 deg x 8.0 deg\n",
      "\n",
      "MapAxis\n",
      "\n",
      "\tname       : energy_true\n",
      "\tunit       : 'MeV'     \n",
      "\tnbins      : 30        \n",
      "\tnode type  : center    \n",
      "\tcenter min : 5.8e+01 MeV\n",
      "\tcenter max : 5.1e+05 MeV\n",
      "\tinterp     : log       \n",
      "\n"
     ]
    }
   ],
   "source": [
    "diffuse_galactic_fermi = Map.read(\n",
    "    \"$GAMMAPY_DATA/fermi-3fhl-gc/gll_iem_v06_gc.fits.gz\"\n",
    ")\n",
    "\n",
    "# Unit is not stored in the file, set it manually\n",
    "diffuse_galactic_fermi.unit = \"cm-2 s-1 MeV-1 sr-1\"\n",
    "print(diffuse_galactic_fermi.geom)\n",
    "\n",
    "print(diffuse_galactic_fermi.geom.axes[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:44.690174Z",
     "iopub.status.busy": "2020-10-16T10:06:44.689598Z",
     "iopub.status.idle": "2020-10-16T10:06:44.731708Z",
     "shell.execute_reply": "2020-10-16T10:06:44.731114Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WcsGeom\n",
      "\n",
      "\taxes       : ['lon', 'lat', 'energy_true']\n",
      "\tshape      : (100, 80, 4)\n",
      "\tndim       : 3\n",
      "\tframe      : galactic\n",
      "\tprojection : TAN\n",
      "\tcenter     : 0.0 deg, 0.0 deg\n",
      "\twidth      : 10.0 deg x 8.0 deg\n",
      "\n",
      "MapAxis\n",
      "\n",
      "\tname       : energy_true\n",
      "\tunit       : 'MeV'     \n",
      "\tnbins      : 4         \n",
      "\tnode type  : center    \n",
      "\tcenter min : 1.7e+04 MeV\n",
      "\tcenter max : 7.7e+05 MeV\n",
      "\tinterp     : log       \n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Interpolate the diffuse emission model onto the counts geometry\n",
    "# The resolution of `diffuse_galactic_fermi` is low: bin size = 0.5 deg\n",
    "# We use ``interp=3`` which means cubic spline interpolation\n",
    "coord = exposure.geom.get_coord()\n",
    "\n",
    "data = diffuse_galactic_fermi.interp_by_coord(\n",
    "    {\"skycoord\": coord.skycoord, \"energy_true\": coord[\"energy_true\"]}, interp=3\n",
    ")\n",
    "diffuse_galactic = WcsNDMap(\n",
    "    exposure.geom, data, unit=diffuse_galactic_fermi.unit\n",
    ")\n",
    "diffuse_gal = TemplateSpatialModel(diffuse_galactic, normalize=False)\n",
    "print(diffuse_galactic.geom)\n",
    "print(diffuse_galactic.geom.axes[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:44.744406Z",
     "iopub.status.busy": "2020-10-16T10:06:44.740969Z",
     "iopub.status.idle": "2020-10-16T10:06:44.747268Z",
     "shell.execute_reply": "2020-10-16T10:06:44.746577Z"
    }
   },
   "outputs": [],
   "source": [
    "diffuse_iem = SkyModel(\n",
    "    PowerLawNormSpectralModel(), diffuse_gal, name=\"diffuse-iem\"\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's look at the map of first energy band of the cube:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:44.759737Z",
     "iopub.status.busy": "2020-10-16T10:06:44.757733Z",
     "iopub.status.idle": "2020-10-16T10:06:45.045419Z",
     "shell.execute_reply": "2020-10-16T10:06:45.046176Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(<Figure size 432x288 with 2 Axes>,\n",
       " <WCSAxesSubplot:xlabel='Galactic Longitude', ylabel='Galactic Latitude'>,\n",
       " <matplotlib.colorbar.Colorbar at 0x7effdbd03da0>)"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "diffuse_gal.map.slice_by_idx({\"energy_true\": 0}).plot(add_cbar=True);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here is the spectrum at the Glaactic center:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:45.049769Z",
     "iopub.status.busy": "2020-10-16T10:06:45.048748Z",
     "iopub.status.idle": "2020-10-16T10:06:45.793393Z",
     "shell.execute_reply": "2020-10-16T10:06:45.792731Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Flux (cm-2 s-1 MeV-1 sr-1)')"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Exposure varies very little with energy at these high energies\n",
    "energy = np.logspace(1, 3, 10) * u.GeV\n",
    "dnde = diffuse_gal.map.interp_by_coord(\n",
    "    {\"skycoord\": gc_pos, \"energy_true\": energy},\n",
    "    interp=\"linear\",\n",
    "    fill_value=None,\n",
    ")\n",
    "plt.plot(energy.value, dnde, \"+\")\n",
    "plt.loglog()\n",
    "plt.xlabel(\"Energy (GeV)\")\n",
    "plt.ylabel(\"Flux (cm-2 s-1 MeV-1 sr-1)\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:45.797342Z",
     "iopub.status.busy": "2020-10-16T10:06:45.796749Z",
     "iopub.status.idle": "2020-10-16T10:06:45.801269Z",
     "shell.execute_reply": "2020-10-16T10:06:45.800578Z"
    }
   },
   "outputs": [],
   "source": [
    "# TODO: show how one can fix the extrapolate to high energy\n",
    "# by computing and padding an extra plane e.g. at 1e3 TeV\n",
    "# that corresponds to a linear extrapolation"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Isotropic diffuse background\n",
    "\n",
    "To load the isotropic diffuse model with Gammapy, use the `~gammapy.modeling.models.TemplateSpectralModel`. We are using `'fill_value': 'extrapolate'` to extrapolate the model above 500 GeV:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:45.806166Z",
     "iopub.status.busy": "2020-10-16T10:06:45.805293Z",
     "iopub.status.idle": "2020-10-16T10:06:45.822676Z",
     "shell.execute_reply": "2020-10-16T10:06:45.823248Z"
    }
   },
   "outputs": [],
   "source": [
    "filename = \"$GAMMAPY_DATA/fermi_3fhl/iso_P8R2_SOURCE_V6_v06.txt\"\n",
    "\n",
    "diffuse_iso = create_fermi_isotropic_diffuse_model(\n",
    "    filename=filename, interp_kwargs={\"fill_value\": None}\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can plot the model in the energy range between 50 GeV and 2000 GeV:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:45.844677Z",
     "iopub.status.busy": "2020-10-16T10:06:45.842432Z",
     "iopub.status.idle": "2020-10-16T10:06:46.495672Z",
     "shell.execute_reply": "2020-10-16T10:06:46.494815Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/runner/work/gammapy-docs/gammapy-docs/gammapy/gammapy/modeling/models/spectral.py:357: MatplotlibDeprecationWarning: The 'nonposx' parameter of __init__() has been renamed 'nonpositive' since Matplotlib 3.3; support for the old name will be dropped two minor releases later.\n",
      "  ax.set_xscale(\"log\", nonposx=\"clip\")\n",
      "/home/runner/work/gammapy-docs/gammapy-docs/gammapy/gammapy/modeling/models/spectral.py:358: MatplotlibDeprecationWarning: The 'nonposy' parameter of __init__() has been renamed 'nonpositive' since Matplotlib 3.3; support for the old name will be dropped two minor releases later.\n",
      "  ax.set_yscale(\"log\", nonposy=\"clip\")\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Energy [TeV]', ylabel='Flux [1 / (cm2 MeV s)]'>"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "erange = [50, 2000] * u.GeV\n",
    "diffuse_iso.spectral_model.plot(erange, flux_unit=\"1 / (cm2 MeV s)\");"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## PSF\n",
    "\n",
    "Next we will tke a look at the PSF. It was computed using ``gtpsf``, in this case for the Galactic center position. Note that generally for Fermi-LAT, the PSF only varies little within a given regions of the sky, especially at high energies like what we have here. We use the `~gammapy.irf.EnergyDependentTablePSF` class to load the PSF and use some of it's methods to get some information about it."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:46.499909Z",
     "iopub.status.busy": "2020-10-16T10:06:46.499330Z",
     "iopub.status.idle": "2020-10-16T10:06:46.523528Z",
     "shell.execute_reply": "2020-10-16T10:06:46.524133Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "EnergyDependentTablePSF\n",
      "-----------------------\n",
      "\n",
      "Axis info:\n",
      "  rad            : size =   300, min =  0.000 deg, max =  9.933 deg\n",
      "  energy         : size =    17, min = 10000.000 MeV, max = 2000000.000 MeV\n",
      "\n",
      "Containment info:\n",
      "  68.0% containment radius at  10 GeV: 0.00 deg\n",
      "  68.0% containment radius at 100 GeV: 0.10 deg\n",
      "  95.0% containment radius at  10 GeV: 0.00 deg\n",
      "  95.0% containment radius at 100 GeV: 0.43 deg\n",
      "\n"
     ]
    }
   ],
   "source": [
    "psf_table = EnergyDependentTablePSF.read(\n",
    "    \"$GAMMAPY_DATA/fermi_3fhl/fermi_3fhl_psf_gc.fits.gz\"\n",
    ")\n",
    "print(psf_table)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To get an idea of the size of the PSF we check how the containment radii of the Fermi-LAT PSF vari with energy and different containment fractions:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:46.548721Z",
     "iopub.status.busy": "2020-10-16T10:06:46.543358Z",
     "iopub.status.idle": "2020-10-16T10:06:46.922409Z",
     "shell.execute_reply": "2020-10-16T10:06:46.921738Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8, 5))\n",
    "psf_table.plot_containment_vs_energy(linewidth=2, fractions=[0.68, 0.95])\n",
    "plt.xlim(50, 2000)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In addition we can check how the actual shape of the PSF varies with energy and compare it against the mean PSF between 50 GeV and 2000 GeV:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:46.955005Z",
     "iopub.status.busy": "2020-10-16T10:06:46.950758Z",
     "iopub.status.idle": "2020-10-16T10:06:47.438474Z",
     "shell.execute_reply": "2020-10-16T10:06:47.437676Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7effd7820b00>"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 576x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8, 5))\n",
    "\n",
    "for energy in [100, 300, 1000] * u.GeV:\n",
    "    psf_at_energy = psf_table.table_psf_at_energy(energy)\n",
    "    psf_at_energy.plot_psf_vs_rad(label=f\"PSF @ {energy:.0f}\", lw=2)\n",
    "\n",
    "erange = [50, 2000] * u.GeV\n",
    "spectrum = PowerLawSpectralModel(index=2.3)\n",
    "psf_mean = psf_table.table_psf_in_energy_band(\n",
    "    energy_band=erange, spectrum=spectrum\n",
    ")\n",
    "psf_mean.plot_psf_vs_rad(label=\"PSF Mean\", lw=4, c=\"k\", ls=\"--\")\n",
    "\n",
    "plt.xlim(1e-3, 0.3)\n",
    "plt.ylim(1e3, 1e6)\n",
    "plt.legend();"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:47.444986Z",
     "iopub.status.busy": "2020-10-16T10:06:47.444313Z",
     "iopub.status.idle": "2020-10-16T10:06:47.455216Z",
     "shell.execute_reply": "2020-10-16T10:06:47.454575Z"
    }
   },
   "outputs": [],
   "source": [
    "# Let's compute a PSF kernel matching the pixel size of our map\n",
    "psf = PSFMap.from_energy_dependent_table_psf(psf_table)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:47.465581Z",
     "iopub.status.busy": "2020-10-16T10:06:47.459246Z",
     "iopub.status.idle": "2020-10-16T10:06:47.781562Z",
     "shell.execute_reply": "2020-10-16T10:06:47.782415Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(<Figure size 432x288 with 2 Axes>,\n",
       " <WCSAxesSubplot:xlabel='Galactic Longitude', ylabel='Galactic Latitude'>,\n",
       " <matplotlib.colorbar.Colorbar at 0x7effd765b588>)"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "psf_kernel = psf.get_psf_kernel(\n",
    "    position=geom.center_skydir, geom=geom, max_radius=\"1 deg\"\n",
    ")\n",
    "psf_kernel.psf_kernel_map.sum_over_axes().plot(stretch=\"log\", add_cbar=True);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Energy Dispersion\n",
    "For simplicity we assume a diagonal energy dispersion:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:47.785203Z",
     "iopub.status.busy": "2020-10-16T10:06:47.784617Z",
     "iopub.status.idle": "2020-10-16T10:06:47.794538Z",
     "shell.execute_reply": "2020-10-16T10:06:47.795130Z"
    }
   },
   "outputs": [],
   "source": [
    "e_true = exposure.geom.axes[\"energy_true\"]\n",
    "edisp = EDispMap.from_diagonal_response(energy_axis_true=e_true)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Pre-processing\n",
    "\n",
    "The model components for which only a norm is fitted can be pre-processed so we don't have to apply the IRF at each iteration of the fit and then save computation time. This can be done using the `MapEvaluator`.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:47.798412Z",
     "iopub.status.busy": "2020-10-16T10:06:47.797218Z",
     "iopub.status.idle": "2020-10-16T10:06:48.384017Z",
     "shell.execute_reply": "2020-10-16T10:06:48.383480Z"
    }
   },
   "outputs": [],
   "source": [
    "# pre-compute iso model\n",
    "evaluator = MapEvaluator(diffuse_iso)\n",
    "evaluator.update(exposure=exposure, psf=psf, edisp=edisp, geom=counts.geom)\n",
    "diffuse_iso = BackgroundModel(evaluator.compute_npred(), name=\"bkg-iso\")\n",
    "diffuse_iso.spectral_model.norm.value = 3.3\n",
    "# pre-compute diffuse model\n",
    "evaluator = MapEvaluator(diffuse_iem)\n",
    "evaluator.update(exposure=exposure, psf=psf, edisp=edisp, geom=counts.geom)\n",
    "\n",
    "diffuse_iem = BackgroundModel(evaluator.compute_npred(), name=\"bkg-iem\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Fit\n",
    "Finally, the big finale: let’s do a 3D map fit for the source at the Galactic center, to measure it’s position and spectrum. We keep the background normalization free."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:48.403687Z",
     "iopub.status.busy": "2020-10-16T10:06:48.390259Z",
     "iopub.status.idle": "2020-10-16T10:06:48.420211Z",
     "shell.execute_reply": "2020-10-16T10:06:48.420820Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "No background model defined for dataset 2qI9q-m6\n"
     ]
    }
   ],
   "source": [
    "spatial_model = PointSpatialModel(\n",
    "    lon_0=\"0 deg\", lat_0=\"0 deg\", frame=\"galactic\"\n",
    ")\n",
    "spectral_model = PowerLawSpectralModel(\n",
    "    index=2.7, amplitude=\"5.8e-10 cm-2 s-1 TeV-1\", reference=\"100 GeV\"\n",
    ")\n",
    "\n",
    "source = SkyModel(\n",
    "    spectral_model=spectral_model,\n",
    "    spatial_model=spatial_model,\n",
    "    name=\"source-gc\",\n",
    ")\n",
    "\n",
    "models = Models([source, diffuse_iem, diffuse_iso])\n",
    "\n",
    "dataset = MapDataset(\n",
    "    models=models, counts=counts, exposure=exposure, psf=psf, edisp=edisp\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:48.430963Z",
     "iopub.status.busy": "2020-10-16T10:06:48.429260Z",
     "iopub.status.idle": "2020-10-16T10:06:51.084504Z",
     "shell.execute_reply": "2020-10-16T10:06:51.083596Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 2.63 s, sys: 23.4 ms, total: 2.66 s\n",
      "Wall time: 2.65 s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "fit = Fit([dataset])\n",
    "result = fit.run()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:51.089138Z",
     "iopub.status.busy": "2020-10-16T10:06:51.088517Z",
     "iopub.status.idle": "2020-10-16T10:06:51.094053Z",
     "shell.execute_reply": "2020-10-16T10:06:51.093521Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "OptimizeResult\n",
      "\n",
      "\tbackend    : minuit\n",
      "\tmethod     : minuit\n",
      "\tsuccess    : True\n",
      "\tmessage    : Optimization terminated successfully.\n",
      "\tnfev       : 163\n",
      "\ttotal stat : 20026.59\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(result)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:51.098542Z",
     "iopub.status.busy": "2020-10-16T10:06:51.097952Z",
     "iopub.status.idle": "2020-10-16T10:06:51.102753Z",
     "shell.execute_reply": "2020-10-16T10:06:51.102186Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Models\n",
      "\n",
      "Component 0: SkyModel\n",
      "\n",
      "  Name                      : source-gc\n",
      "  Datasets names            : None\n",
      "  Spectral model type       : PowerLawSpectralModel\n",
      "  Spatial  model type       : PointSpatialModel\n",
      "  Temporal model type       : \n",
      "  Parameters:\n",
      "    index                   :   2.685              \n",
      "    amplitude               :   5.63e-10  1 / (cm2 s TeV)\n",
      "    reference    (frozen)   :   0.100  TeV         \n",
      "    lon_0                   :  -0.025  deg         \n",
      "    lat_0                   :  -0.040  deg         \n",
      "\n",
      "Component 1: BackgroundModel\n",
      "\n",
      "  Name                      : bkg-iem\n",
      "  Datasets names            : None\n",
      "  Parameters:\n",
      "    norm                    :   1.033              \n",
      "    tilt         (frozen)   :   0.000              \n",
      "    reference    (frozen)   :   1.000  TeV         \n",
      "\n",
      "Component 2: BackgroundModel\n",
      "\n",
      "  Name                      : bkg-iso\n",
      "  Datasets names            : None\n",
      "  Parameters:\n",
      "    norm                    :   4.447              \n",
      "    tilt         (frozen)   :   0.000              \n",
      "    reference    (frozen)   :   1.000  TeV         \n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(models)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-10-16T10:06:51.110121Z",
     "iopub.status.busy": "2020-10-16T10:06:51.109500Z",
     "iopub.status.idle": "2020-10-16T10:06:51.401309Z",
     "shell.execute_reply": "2020-10-16T10:06:51.402118Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/share/miniconda/envs/gammapy-dev/lib/python3.7/site-packages/astropy/visualization/wcsaxes/core.py:211: MatplotlibDeprecationWarning: Passing parameters norm and vmin/vmax simultaneously is deprecated since 3.3 and will become an error two minor releases later. Please pass vmin/vmax directly to the norm when creating it.\n",
      "  return super().imshow(X, *args, origin=origin, **kwargs)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(<Figure size 432x288 with 2 Axes>,\n",
       " <WCSAxesSubplot:xlabel='Galactic Longitude', ylabel='Galactic Latitude'>,\n",
       " <matplotlib.colorbar.Colorbar at 0x7effdbbed320>)"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "residual = counts - dataset.npred()\n",
    "residual.sum_over_axes().smooth(\"0.1 deg\").plot(\n",
    "    cmap=\"coolwarm\", vmin=-3, vmax=3, add_cbar=True\n",
    ");"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Exercises\n",
    "\n",
    "- Fit the position and spectrum of the source [SNR G0.9+0.1](http://gamma-sky.net/#/cat/tev/110).\n",
    "- Make maps and fit the position and spectrum of the [Crab nebula](http://gamma-sky.net/#/cat/tev/25)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Summary\n",
    "\n",
    "In this tutorial you have seen how to work with Fermi-LAT data with Gammapy. You have to use the Fermi ST to prepare the exposure cube and PSF, and then you can use Gammapy for any event or map analysis using the same methods that are used to analyse IACT data.\n",
    "\n",
    "This works very well at high energies (here above 10 GeV), where the exposure and PSF is almost constant spatially and only varies a little with energy. It is not expected to give good results for low-energy data, where the Fermi-LAT PSF is very large. If you are interested to help us validate down to what energy Fermi-LAT analysis with Gammapy works well (e.g. by re-computing results from 3FHL or other published analysis results), or to extend the Gammapy capabilities (e.g. to work with energy-dependent multi-resolution maps and PSF), that would be very welcome!"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.0"
  },
  "latex_envs": {
   "LaTeX_envs_menu_present": true,
   "autoclose": false,
   "autocomplete": true,
   "bibliofile": "biblio.bib",
   "cite_by": "apalike",
   "current_citInitial": 1.0,
   "eqLabelWithNumbers": true,
   "eqNumInitial": 1.0,
   "hotkeys": {
    "equation": "Ctrl-E",
    "itemize": "Ctrl-I"
   },
   "labels_anchors": false,
   "latex_user_defs": false,
   "report_style_numbering": false,
   "user_envs_cfg": false
  },
  "nbsphinx": {
   "orphan": true
  },
  "toc": {
   "base_numbering": 1.0,
   "nav_menu": {
    "height": "237px",
    "width": "253px"
   },
   "number_sections": false,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": "block",
   "toc_window_display": false
  },
  "varInspector": {
   "cols": {
    "lenName": 16.0,
    "lenType": 16.0,
    "lenVar": 40.0
   },
   "kernels_config": {
    "python": {
     "delete_cmd_postfix": "",
     "delete_cmd_prefix": "del ",
     "library": "var_list.py",
     "varRefreshCmd": "print(var_dic_list())"
    },
    "r": {
     "delete_cmd_postfix": ") ",
     "delete_cmd_prefix": "rm(",
     "library": "var_list.r",
     "varRefreshCmd": "cat(var_dic_list()) "
    }
   },
   "types_to_exclude": [
    "module",
    "function",
    "builtin_function_or_method",
    "instance",
    "_Feature"
   ],
   "window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
