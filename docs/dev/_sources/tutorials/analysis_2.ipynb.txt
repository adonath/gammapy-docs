{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "<div class=\"alert alert-info\">\n",
    "\n",
    "**This is a fixed-text formatted version of a Jupyter notebook**\n",
    "\n",
    "- Try online [![Binder](https://static.mybinder.org/badge.svg)](https://mybinder.org/v2/gh/gammapy/gammapy-webpage/master?urlpath=lab/tree/analysis_2.ipynb)\n",
    "- You can contribute with your own notebooks in this\n",
    "[GitHub repository](https://github.com/gammapy/gammapy/tree/master/docs/tutorials).\n",
    "- **Source files:**\n",
    "[analysis_2.ipynb](../_static/notebooks/analysis_2.ipynb) |\n",
    "[analysis_2.py](../_static/notebooks/analysis_2.py)\n",
    "</div>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# First analysis with gammapy library API\n",
    "\n",
    "## Prerequisites:\n",
    "\n",
    "- Understanding the gammapy data workflow, in particular what are DL3 events and intrument response functions (IRF).\n",
    "- Understanding of the data reduction and modeling fitting process as shown in the [first gammapy analysis with the high level interface tutorial](analysis_1.ipynb)\n",
    "\n",
    "## Context\n",
    "\n",
    "This notebook is an introduction to gammapy analysis this time using the lower level classes and functions\n",
    "the library.\n",
    "This allows to understand what happens during two main gammapy analysis steps, data reduction and modeling/fitting. \n",
    "\n",
    "**Objective: Create a 3D dataset of the Crab using the H.E.S.S. DL3 data release 1 and perform a simple model fitting of the Crab nebula using the lower level gammapy API.**\n",
    "\n",
    "## Proposed approach:\n",
    "\n",
    "Here, we have to interact with the data archive (with the `~gammapy.data.DataStore`) to retrieve a list of selected observations (`~gammapy.data.Observations`). Then, we define the geometry of the `~gammapy.datasets.MapDataset` object we want to produce and the maker object that reduce an observation\n",
    "to a dataset. \n",
    "\n",
    "We can then proceed with data reduction with a loop over all selected observations to produce datasets in the relevant geometry and stack them together (i.e. sum them all).\n",
    "\n",
    "In practice, we have to:\n",
    "- Create a `~gammapy.data.DataStore` poiting to the relevant data \n",
    "- Apply an observation selection to produce a list of observations, a `~gammapy.data.Observations` object.\n",
    "- Define a geometry of the Map we want to produce, with a sky projection and an energy range.\n",
    "    - Create a `~gammapy.maps.MapAxis` for the energy\n",
    "    - Create a `~gammapy.maps.WcsGeom` for the geometry\n",
    "- Create the necessary makers : \n",
    "    - the map dataset maker : `~gammapy.makers.MapDatasetMaker`\n",
    "    - the background normalization maker, here a `~gammapy.makers.FoVBackgroundMaker`\n",
    "    - and usually the safe range maker : `~gammapy.makers.SafeRangeMaker`\n",
    "- Perform the data reduction loop. And for every observation:\n",
    "    - Apply the makers sequentially to produce the current `~gammapy.datasets.MapDataset`\n",
    "    - Stack it on the target one.\n",
    "- Define the `~gammapy.modeling.models.SkyModel` to apply to the dataset.\n",
    "- Create a `~gammapy.modeling.Fit` object and run it to fit the model parameters\n",
    "- Apply a `~gammapy.estimators.FluxPointsEstimator` to compute flux points for the spectral part of the fit.\n",
    "\n",
    "## Setup\n",
    "First, we setup the analysis by performing required imports.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "from pathlib import Path\n",
    "from astropy import units as u\n",
    "from astropy.coordinates import SkyCoord\n",
    "from regions import CircleSkyRegion"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "from gammapy.data import DataStore\n",
    "from gammapy.datasets import MapDataset\n",
    "from gammapy.maps import WcsGeom, MapAxis, Map\n",
    "from gammapy.makers import MapDatasetMaker, SafeMaskMaker, FoVBackgroundMaker\n",
    "from gammapy.modeling.models import (\n",
    "    SkyModel,\n",
    "    PowerLawSpectralModel,\n",
    "    PointSpatialModel,\n",
    ")\n",
    "from gammapy.modeling import Fit\n",
    "from gammapy.estimators import FluxPointsEstimator"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Defining the datastore and selecting observations\n",
    "\n",
    "We first use the `~gammapy.data.DataStore` object to access the observations we want to analyse. Here the H.E.S.S. DL3 DR1. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "data_store = DataStore.from_dir(\"$GAMMAPY_DATA/hess-dl3-dr1\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can now define an observation filter to select only the relevant observations. \n",
    "Here we use a cone search which we define with a python dict.\n",
    "\n",
    "We then filter the `ObservationTable` with `~gammapy.data.ObservationTable.select_observations()`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "selection = dict(\n",
    "    type=\"sky_circle\",\n",
    "    frame=\"icrs\",\n",
    "    lon=\"83.633 deg\",\n",
    "    lat=\"22.014 deg\",\n",
    "    radius=\"5 deg\",\n",
    ")\n",
    "selected_obs_table = data_store.obs_table.select_observations(selection)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can now retrieve the relevant observations by passing their `obs_id` to the`~gammapy.data.DataStore.get_observations()` method."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "observations = data_store.get_observations(selected_obs_table[\"OBS_ID\"])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Preparing reduced datasets geometry\n",
    "\n",
    "Now we define a reference geometry for our analysis, We choose a WCS based geometry with a binsize of 0.02 deg and also define an energy axis: "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "energy_axis = MapAxis.from_energy_bounds(1.0, 10.0, 4, unit=\"TeV\")\n",
    "\n",
    "geom = WcsGeom.create(\n",
    "    skydir=(83.633, 22.014),\n",
    "    binsz=0.02,\n",
    "    width=(2, 2),\n",
    "    frame=\"icrs\",\n",
    "    proj=\"CAR\",\n",
    "    axes=[energy_axis],\n",
    ")\n",
    "\n",
    "# Reduced IRFs are defined in true energy (i.e. not measured energy).\n",
    "energy_axis_true = MapAxis.from_energy_bounds(\n",
    "    0.5, 20, 10, unit=\"TeV\", name=\"energy_true\"\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now we can define the target dataset with this geometry."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "stacked = MapDataset.create(\n",
    "    geom=geom, energy_axis_true=energy_axis_true, name=\"crab-stacked\"\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Data reduction\n",
    "\n",
    "### Create the maker classes to be used\n",
    "\n",
    "The `~gammapy.datasets.MapDatasetMaker` object is initialized as well as the `~gammapy.makers.SafeMaskMaker` that carries here a maximum offset selection."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "offset_max = 2.5 * u.deg\n",
    "maker = MapDatasetMaker()\n",
    "maker_safe_mask = SafeMaskMaker(methods=[\"offset-max\"], offset_max=offset_max)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "circle = CircleSkyRegion(\n",
    "    center=SkyCoord(\"83.63 deg\", \"22.14 deg\"), radius=0.2 * u.deg\n",
    ")\n",
    "data = geom.region_mask(regions=[circle], inside=False)\n",
    "exclusion_mask = Map.from_geom(geom=geom, data=data)\n",
    "maker_fov = FoVBackgroundMaker(method=\"fit\", exclusion_mask=exclusion_mask)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Perform the data reduction loop"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Background norm obs 23523: 0.99\n",
      "Background norm obs 23526: 1.08\n",
      "Background norm obs 23559: 0.99\n",
      "Background norm obs 23592: 1.10\n",
      "CPU times: user 2.79 s, sys: 94.3 ms, total: 2.88 s\n",
      "Wall time: 2.89 s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "\n",
    "for obs in observations:\n",
    "    # First a cutout of the target map is produced\n",
    "    cutout = stacked.cutout(\n",
    "        obs.pointing_radec, width=2 * offset_max, name=f\"obs-{obs.obs_id}\"\n",
    "    )\n",
    "    # A MapDataset is filled in this cutout geometry\n",
    "    dataset = maker.run(cutout, obs)\n",
    "    # The data quality cut is applied\n",
    "    dataset = maker_safe_mask.run(dataset, obs)\n",
    "    # fit background model\n",
    "    dataset = maker_fov.run(dataset)\n",
    "    print(\n",
    "        f\"Background norm obs {obs.obs_id}: {dataset.background_model.norm.value:.2f}\"\n",
    "    )\n",
    "    # The resulting dataset cutout is stacked onto the final one\n",
    "    stacked.stack(dataset)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MapDataset\n",
      "----------\n",
      "\n",
      "  Name                            : crab-stacked \n",
      "\n",
      "  Total counts                    : 2479 \n",
      "  Total predicted counts          : 2113.00\n",
      "  Total background counts         : 2113.00\n",
      "\n",
      "  Exposure min                    : 3.75e+08 m2 s\n",
      "  Exposure max                    : 3.48e+09 m2 s\n",
      "\n",
      "  Number of total bins            : 40000 \n",
      "  Number of fit bins              : 40000 \n",
      "\n",
      "  Fit statistic type              : cash\n",
      "  Fit statistic value (-2 log(L)) : 17778.05\n",
      "\n",
      "  Number of models                : 1 \n",
      "  Number of parameters            : 3\n",
      "  Number of free parameters       : 1\n",
      "\n",
      "  Component 0: BackgroundModel\n",
      "  \n",
      "    Name                      : crab-stacked-bkg\n",
      "    Datasets names            : ['crab-stacked']\n",
      "    Parameters:\n",
      "      norm                    :   1.000              \n",
      "      tilt         (frozen)   :   0.000              \n",
      "      reference    (frozen)   :   1.000  TeV         \n",
      "  \n",
      "  \n"
     ]
    }
   ],
   "source": [
    "print(stacked)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Inspect the reduced dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(<Figure size 432x288 with 2 Axes>,\n",
       " <WCSAxesSubplot:xlabel='Right Ascension', ylabel='Declination'>,\n",
       " <matplotlib.colorbar.Colorbar at 0x7fe85bbba908>)"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "stacked.counts.sum_over_axes().smooth(0.05 * u.deg).plot(\n",
    "    stretch=\"sqrt\", add_cbar=True\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Save dataset to disk\n",
    "\n",
    "It is common to run the preparation step independent of the likelihood fit, because often the preparation of maps, PSF and energy dispersion is slow if you have a lot of data. We first create a folder:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "path = Path(\"analysis_2\")\n",
    "path.mkdir(exist_ok=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "And then write the maps and IRFs to disk by calling the dedicated `~gammapy.datasets.MapDataset.write()` method:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "filename = path / \"crab-stacked-dataset.fits.gz\"\n",
    "stacked.write(filename, overwrite=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Define the model\n",
    "We first define the model, a `SkyModel`, as the combination of a point source `SpatialModel` with a powerlaw `SpectralModel`:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "target_position = SkyCoord(ra=83.63308, dec=22.01450, unit=\"deg\")\n",
    "spatial_model = PointSpatialModel(\n",
    "    lon_0=target_position.ra, lat_0=target_position.dec, frame=\"icrs\"\n",
    ")\n",
    "\n",
    "spectral_model = PowerLawSpectralModel(\n",
    "    index=2.702,\n",
    "    amplitude=4.712e-11 * u.Unit(\"1 / (cm2 s TeV)\"),\n",
    "    reference=1 * u.TeV,\n",
    ")\n",
    "\n",
    "sky_model = SkyModel(\n",
    "    spatial_model=spatial_model, spectral_model=spectral_model, name=\"crab\"\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now we assign this model to our reduced dataset:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "stacked.models.append(sky_model)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Fit the model\n",
    "\n",
    "The `~gammapy.modeling.Fit` class is orchestrating the fit, connecting the `stats` method of the dataset to the minimizer. By default, it uses `iminuit`.\n",
    "\n",
    "Its contructor takes a list of dataset as argument."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "------------------------------------------------------------------\n",
      "| FCN = 1.624e+04               |     Ncalls=126 (126 total)     |\n",
      "| EDM = 6.81e-06 (Goal: 0.0002) |            up = 1.0            |\n",
      "------------------------------------------------------------------\n",
      "|  Valid Min.   | Valid Param.  | Above EDM | Reached call limit |\n",
      "------------------------------------------------------------------\n",
      "|     True      |     True      |   False   |       False        |\n",
      "------------------------------------------------------------------\n",
      "| Hesse failed  |   Has cov.    | Accurate  | Pos. def. | Forced |\n",
      "------------------------------------------------------------------\n",
      "|     False     |     True      |   True    |   True    | False  |\n",
      "------------------------------------------------------------------\n",
      "CPU times: user 2.62 s, sys: 16 ms, total: 2.63 s\n",
      "Wall time: 2.63 s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "fit = Fit([stacked])\n",
    "result = fit.run(optimize_opts={\"print_level\": 1})"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The `FitResult` contains information on the fitted parameters."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<i>Table length=8</i>\n",
       "<table id=\"table140635948966744\" class=\"table-striped table-bordered table-condensed\">\n",
       "<thead><tr><th>name</th><th>value</th><th>unit</th><th>min</th><th>max</th><th>frozen</th><th>error</th></tr></thead>\n",
       "<thead><tr><th>str9</th><th>float64</th><th>str14</th><th>float64</th><th>float64</th><th>bool</th><th>float64</th></tr></thead>\n",
       "<tr><td>norm</td><td>9.351e-01</td><td></td><td>0.000e+00</td><td>nan</td><td>False</td><td>2.192e-02</td></tr>\n",
       "<tr><td>tilt</td><td>0.000e+00</td><td></td><td>nan</td><td>nan</td><td>True</td><td>0.000e+00</td></tr>\n",
       "<tr><td>reference</td><td>1.000e+00</td><td>TeV</td><td>nan</td><td>nan</td><td>True</td><td>0.000e+00</td></tr>\n",
       "<tr><td>index</td><td>2.600e+00</td><td></td><td>nan</td><td>nan</td><td>False</td><td>1.004e-01</td></tr>\n",
       "<tr><td>amplitude</td><td>4.586e-11</td><td>cm-2 s-1 TeV-1</td><td>nan</td><td>nan</td><td>False</td><td>3.702e-12</td></tr>\n",
       "<tr><td>reference</td><td>1.000e+00</td><td>TeV</td><td>nan</td><td>nan</td><td>True</td><td>0.000e+00</td></tr>\n",
       "<tr><td>lon_0</td><td>8.362e+01</td><td>deg</td><td>nan</td><td>nan</td><td>False</td><td>3.113e-03</td></tr>\n",
       "<tr><td>lat_0</td><td>2.202e+01</td><td>deg</td><td>-9.000e+01</td><td>9.000e+01</td><td>False</td><td>2.963e-03</td></tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<Table length=8>\n",
       "   name     value        unit         min        max    frozen   error  \n",
       "   str9    float64      str14       float64    float64   bool   float64 \n",
       "--------- --------- -------------- ---------- --------- ------ ---------\n",
       "     norm 9.351e-01                 0.000e+00       nan  False 2.192e-02\n",
       "     tilt 0.000e+00                       nan       nan   True 0.000e+00\n",
       "reference 1.000e+00            TeV        nan       nan   True 0.000e+00\n",
       "    index 2.600e+00                       nan       nan  False 1.004e-01\n",
       "amplitude 4.586e-11 cm-2 s-1 TeV-1        nan       nan  False 3.702e-12\n",
       "reference 1.000e+00            TeV        nan       nan   True 0.000e+00\n",
       "    lon_0 8.362e+01            deg        nan       nan  False 3.113e-03\n",
       "    lat_0 2.202e+01            deg -9.000e+01 9.000e+01  False 2.963e-03"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "result.parameters.to_table()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Inspecting residuals\n",
    "\n",
    "For any fit it is usefull to inspect the residual images. We have a few option on the dataset object to handle this. First we can use `.plot_residuals()` to plot a residual image, summed over all energies: "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/share/miniconda/envs/gammapy-dev/lib/python3.7/site-packages/astropy/visualization/wcsaxes/core.py:211: MatplotlibDeprecationWarning: Passing parameters norm and vmin/vmax simultaneously is deprecated since 3.3 and will become an error two minor releases later. Please pass vmin/vmax directly to the norm when creating it.\n",
      "  return super().imshow(X, *args, origin=origin, **kwargs)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(<WCSAxesSubplot:xlabel='Right Ascension', ylabel='Declination'>, None)"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "stacked.plot_residuals(method=\"diff/sqrt(model)\", vmin=-0.5, vmax=0.5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In addition we can aslo specify a region in the map to show the spectral residuals:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "region = CircleSkyRegion(\n",
    "    center=SkyCoord(\"83.63 deg\", \"22.14 deg\"), radius=0.5 * u.deg\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/share/miniconda/envs/gammapy-dev/lib/python3.7/site-packages/astropy/visualization/wcsaxes/core.py:211: MatplotlibDeprecationWarning: Passing parameters norm and vmin/vmax simultaneously is deprecated since 3.3 and will become an error two minor releases later. Please pass vmin/vmax directly to the norm when creating it.\n",
      "  return super().imshow(X, *args, origin=origin, **kwargs)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(<WCSAxesSubplot:xlabel='Right Ascension', ylabel='Declination'>,\n",
       " <AxesSubplot:xlabel='Energy [TeV]', ylabel='Residuals ((data - model) / sqrt(model))'>)"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x288 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "stacked.plot_residuals(\n",
    "    region=region, method=\"diff/sqrt(model)\", vmin=-0.5, vmax=0.5\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can also directly access the `.residuals()` to get a map, that we can plot interactively:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/share/miniconda/envs/gammapy-dev/lib/python3.7/site-packages/astropy/visualization/wcsaxes/core.py:211: MatplotlibDeprecationWarning: Passing parameters norm and vmin/vmax simultaneously is deprecated since 3.3 and will become an error two minor releases later. Please pass vmin/vmax directly to the norm when creating it.\n",
      "  return super().imshow(X, *args, origin=origin, **kwargs)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "residuals = stacked.residuals(method=\"diff\")\n",
    "residuals.smooth(\"0.08 deg\").plot_interactive(\n",
    "    cmap=\"coolwarm\", vmin=-0.1, vmax=0.1, stretch=\"linear\", add_cbar=True\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Plot the fitted spectrum"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Making a butterfly plot \n",
    "\n",
    "The `SpectralModel` component can be used to produce a, so-called, butterfly plot showing the enveloppe of the model taking into account parameter uncertainties:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "spec = sky_model.spectral_model"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now we can actually do the plot using the `plot_error` method:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/runner/work/gammapy-docs/gammapy-docs/gammapy/gammapy/modeling/models/spectral.py:312: MatplotlibDeprecationWarning: The 'nonposx' parameter of __init__() has been renamed 'nonpositive' since Matplotlib 3.3; support for the old name will be dropped two minor releases later.\n",
      "  ax.set_xscale(\"log\", nonposx=\"clip\")\n",
      "/home/runner/work/gammapy-docs/gammapy-docs/gammapy/gammapy/modeling/models/spectral.py:313: MatplotlibDeprecationWarning: The 'nonposy' parameter of __init__() has been renamed 'nonpositive' since Matplotlib 3.3; support for the old name will be dropped two minor releases later.\n",
      "  ax.set_yscale(\"log\", nonposy=\"clip\")\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "energy_range = [1, 10] * u.TeV\n",
    "spec.plot(energy_range=energy_range, energy_power=2)\n",
    "ax = spec.plot_error(energy_range=energy_range, energy_power=2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Computing flux points\n",
    "\n",
    "We can now compute some flux points using the `~gammapy.estimators.FluxPointsEstimator`. \n",
    "\n",
    "Besides the list of datasets to use, we must provide it the energy intervals on which to compute flux points as well as the model component name. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "e_edges = [1, 2, 4, 10] * u.TeV\n",
    "fpe = FluxPointsEstimator(e_edges=e_edges, source=\"crab\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 1.05 s, sys: 3.26 ms, total: 1.05 s\n",
      "Wall time: 1.05 s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "flux_points = fpe.run(datasets=[stacked])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/runner/work/gammapy-docs/gammapy-docs/gammapy/gammapy/modeling/models/spectral.py:312: MatplotlibDeprecationWarning: The 'nonposx' parameter of __init__() has been renamed 'nonpositive' since Matplotlib 3.3; support for the old name will be dropped two minor releases later.\n",
      "  ax.set_xscale(\"log\", nonposx=\"clip\")\n",
      "/home/runner/work/gammapy-docs/gammapy-docs/gammapy/gammapy/modeling/models/spectral.py:313: MatplotlibDeprecationWarning: The 'nonposy' parameter of __init__() has been renamed 'nonpositive' since Matplotlib 3.3; support for the old name will be dropped two minor releases later.\n",
      "  ax.set_yscale(\"log\", nonposy=\"clip\")\n",
      "/home/runner/work/gammapy-docs/gammapy-docs/gammapy/gammapy/estimators/flux_point.py:664: MatplotlibDeprecationWarning: The 'nonposx' parameter of __init__() has been renamed 'nonpositive' since Matplotlib 3.3; support for the old name will be dropped two minor releases later.\n",
      "  ax.set_xscale(\"log\", nonposx=\"clip\")\n",
      "/home/runner/work/gammapy-docs/gammapy-docs/gammapy/gammapy/estimators/flux_point.py:665: MatplotlibDeprecationWarning: The 'nonposy' parameter of __init__() has been renamed 'nonpositive' since Matplotlib 3.3; support for the old name will be dropped two minor releases later.\n",
      "  ax.set_yscale(\"log\", nonposy=\"clip\")\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Energy (TeV)', ylabel='dnde (TeV / (cm2 s))'>"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax = spec.plot_error(energy_range=energy_range, energy_power=2)\n",
    "flux_points.plot(ax=ax, energy_power=2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.0"
  },
  "nbsphinx": {
   "orphan": true
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {
     "04f9ccb0a95844e582b9af4806dc8cb9": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "50%"
      }
     },
     "1ab8b895793642d093de50e216c9024d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "RadioButtonsModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "RadioButtonsModel",
       "_options_labels": [
        "linear",
        "sqrt",
        "log"
       ],
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "RadioButtonsView",
       "description": "Select stretch:",
       "description_tooltip": null,
       "disabled": false,
       "index": 0,
       "layout": "IPY_MODEL_a8ab806a09a445f2be6d31302c306fe3",
       "style": "IPY_MODEL_dbc747bd9e9a42ffaaae9e1545809e17"
      }
     },
     "7384fbc2cba54ec784427ec28f120e62": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "89fdd7454bf34071aace04054bcc3ff0": {
      "model_module": "@jupyter-widgets/output",
      "model_module_version": "1.0.0",
      "model_name": "OutputModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/output",
       "_model_module_version": "1.0.0",
       "_model_name": "OutputModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/output",
       "_view_module_version": "1.0.0",
       "_view_name": "OutputView",
       "layout": "IPY_MODEL_a8cfa33db4684992a86200db66dc4c22",
       "msg_id": "",
       "outputs": []
      }
     },
     "915b8f1e5248444faa7720db88dfcc4f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": "initial"
      }
     },
     "9e862bf9947b4efbb597cd381cf8a15c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "VBoxModel",
      "state": {
       "_dom_classes": [
        "widget-interact"
       ],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "VBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "VBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_e907c0b349cb43a99442ae4cae39c6ca",
        "IPY_MODEL_1ab8b895793642d093de50e216c9024d",
        "IPY_MODEL_89fdd7454bf34071aace04054bcc3ff0"
       ],
       "layout": "IPY_MODEL_7384fbc2cba54ec784427ec28f120e62"
      }
     },
     "a8ab806a09a445f2be6d31302c306fe3": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a8cfa33db4684992a86200db66dc4c22": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "dbc747bd9e9a42ffaaae9e1545809e17": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": "initial"
      }
     },
     "e907c0b349cb43a99442ae4cae39c6ca": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "SelectionSliderModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "SelectionSliderModel",
       "_options_labels": [
        "1.00e+00 TeV - 1.78e+00 TeV TeV",
        "1.78e+00 TeV - 3.16e+00 TeV TeV",
        "3.16e+00 TeV - 5.62e+00 TeV TeV",
        "5.62e+00 TeV - 1.00e+01 TeV TeV"
       ],
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "SelectionSliderView",
       "continuous_update": false,
       "description": "Select energy:",
       "description_tooltip": null,
       "disabled": false,
       "index": 0,
       "layout": "IPY_MODEL_04f9ccb0a95844e582b9af4806dc8cb9",
       "orientation": "horizontal",
       "readout": true,
       "style": "IPY_MODEL_915b8f1e5248444faa7720db88dfcc4f"
      }
     }
    },
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
